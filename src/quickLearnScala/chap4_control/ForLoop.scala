package quickLearnScala.chap4_control

/**
  * Created by yinxing on 2018/11/30.
  */

// 03for循环
class ForLoop {

  /**
    * for循环
    * Scala中的for循环语句格式如下：
    * for (变量<-表达式) 语句块
    * “变量<-表达式”被称为“生成器（generator）”
    */
  // 语句中，“<-”表示，之前的i要遍历后面1到5的所有值
  for (i <- 1 to 5) println(i)

  // 在前面的Range那一节，我们介绍了Range的使用方法，因此，这里可以改变步长，比如设置步长为2，如下所示：
  for (i <- 1 to 5 by 2) println(i)

  // 有时候，我们可能不希望打印出所有的结果，我们可能希望过滤出一些满足制定条件的结果，
  // 这个时候，就需要使用到称为“守卫(guard)”的表达式。比如，我们只希望输出1到5之中的所有偶数，可以采用以下语句：
  for (i <- 1 to 5 if i%2==0) println(i)

  // Scala也支持“多个生成器”的情形，可以用分号把它们隔开，比如：
  for (i <- 1 to 5;j<- 1 to 3) println(i*j)

  // 也可以给每个生成器都添加一个“守卫”，如下：
  for (i <- 1 to 5 if i%2==0;j<- 1 to 3 if j!=1) println(i*j)

  /**
    * for推导式
    * 有时候，我们需要对上述过滤后的结果进行进一步的处理，这时，就可以采用yield关键字，对过滤后的结果构建一个集合。比如，我们可以采用以下语句：
    */
  for (i <- 1 to 5 if i%2==0) yield i
  // 上面这种带有yield关键字的for循环，被称为“for推导式”。这个概念源自函数式编程，也就是说，通过for循环遍历一个或多个集合，对集合中的元素进行“推导”，从而计算得到新的集合，用于后续的其他处理。

}
